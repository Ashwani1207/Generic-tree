#include<bits/stdc++.h>
using namespace std;

struct node{
    int data;
    vector< node* > children;

    node (int d) {
        this -> data = d;
        children.clear();
    }
};
static int msn=0;
static int ms=INT_MIN;
static int csum(node *temp){
    int sum=0;
    for(auto child:temp->children){
        int cs=csum(child);
        sum+=cs;
    }
    sum+=temp->data;
    if(sum>ms)
    {
        
        msn=temp->data;
        ms=sum;
    }
    return sum;
}
int main(){
   // vector<int> arr({10,20,50,-1,60,-1,-1,30,70,-1,80,110,-1,120,-1,-1,90,-1,-1,40,100,-1,-1});
  int n;
    cin>>n;
    int arr[n];
    for(int i=0;i<n;i++)
    cin>>arr[i];
    node* root = NULL;
    stack<node*> st;
    for(int i = 0; i < n; i++)
    {
        if(arr[i]==-1)
            st.pop();
        else{
            node* t = new node(arr[i]);
            if(st.size() != 0)
                st.top()->children.push_back(t);
            else
                root=t;
            st.push(t);
        }
    }
  
// // succesorandpredecesor(root,val);
// // cout<<"Predecesor"<<predecesor->data<<endl;
// // cout<<"SUccerrr"<<succesor->data<<endl;
// ceilfloor(root,val);
// cout<<"CEIL = "<<cl<<endl;
// cout<<"FLOOR = "<<fl<<endl;
csum(root);
cout<<msn<<"@"<<ms<<endl;

    
}
